.\"	$OpenBSD$
.\"
.\" Copyright (c) 2017--2019 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt ORT-SQL 1
.Os
.Sh NAME
.Nm ort-sql
.Nd produce ort SQL schema
.Sh SYNOPSIS
.Nm ort-sql
.Op Ar config...
.Sh DESCRIPTION
The
.Nm
utility accepts
.Xr ort 5
.Ar config
files, defaulting to standard input,
and produces an SQL schema.
The SQL generated is designed for
.Xr sqlite3 1 .
.Ss SQL Commands
Output always begins with
.Cm PRAGMA foreign_keys=ON
regardless of whether the configuration has any references.
.Pp
The schema begins of a series of
.Cm CREATE TABLE
SQL commands for each
.Cm struct
object in
.Ar config .
The name of the table inherits from the structure name.
.Pp
Each
.Cm field
within each
.Cm struct
is mapped into a representative SQL type except the
.Cm struct ,
which is a virtual type.
The name of the column inherits from the field name.
.Bl -column "ort type" "SQL type" -offset indent
.It Cm bit Ta Cm INTEGER
.It Cm bitfield Ta Cm INTEGER
.It Cm blob Ta Cm BLOB
.It Cm date Ta Cm INTEGER
.It Cm email Ta Cm TEXT
.It Cm enum Ta Cm INTEGER
.It Cm epoch Ta Cm INTEGER
.It Cm int Ta Cm INTEGER
.It Cm password Ta Cm TEXT
.It Cm real Ta Cm REAL
.It Cm text Ta Cm TEXT
.El
.Pp
Furthermore, types may have the following attributes.
.Bl -column "ort type" "SQL type" -offset indent
.It Cm actdel Ta Cm ON DELETE
.It Cm actup Ta Cm ON UPDATE
.It Cm default Ta Cm DEFAULT()
.It Cm rowid Ta Cm PRIMARY KEY
.It Cm unique Ta Cm UNIQUE
.El
.Pp
If
.Cm null
is not specified, the SQL column is marked as
.Cm NOT NULL .
The
.Cm default
attribute is type-specific.
.Pp
Reference types may contain the
.Cm actup
and
.Cm actdel
attributes map as follows:
.Bl -column "ort type" "SQL type" -offset indent
.It Cm cascade Ta Cm CASCADE
.It Cm default Ta Cm DEFAULT
.It Cm nullify Ta Cm NULLIFY
.It Cm restrict Ta Cm RESTRICT
.El
.Pp
These are assigned as
.Cm FOREIGN KEY(xxx) REFERENCE yyy(zzz)
followed by the update or delete clause, if applicable.
.Pp
Lastly, any
.Cm unique
statement on the structure is rendered as a unique index.
The name of the index is the (sorted) fields in the
.Cm unique
statement, separated by underscores, and prefixed with
.Dq unique_strct__
where
.Dq strct
is the name of the structure.
Thus, an example structure
.Dq xyzzy
having
.Li unique(foo, bar)
would be rendered as:
.Bd -literal -offset indent
CREATE UNIQUE INDEX unique_xyzzy__bar_foo ON xyzzy(foo, bar);
.Ed
.\" The following requests should be uncommented and used where appropriate.
.\" .Sh CONTEXT
.\" For section 9 functions only.
.\" .Sh RETURN VALUES
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.Sh EXIT STATUS
.Ex -std
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr ort-sqldiff 1 ,
.Xr sqlite3 1 ,
.Xr ort 5
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
